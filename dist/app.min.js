(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define("app", [], factory);
	else if(typeof exports === 'object')
		exports["app"] = factory();
	else
		root["app"] = factory();
})(typeof self !== 'undefined' ? self : this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_helpers_helpers__ = __webpack_require__(1);




class SimpleShare {
    init() {
        this.crauler();
    }

    static encode(string) {
        return encodeURI(string);
    }

    crauler() {
        let that;
        let targets;
        let title;
        let thumbnail;
        let description;

        that = this;
        targets = document.querySelectorAll('[data-dcp-share]');

        title = document.head.querySelector('meta[property="og:title"]').content;
        thumbnail = document.head.querySelector('meta[property="og:image"]').content;
        description = document.head.querySelector('meta[property="og:description"]').content;

        for (let i = 0; i < targets.length; i++) {
            targets[i].addEventListener('click', function (e) {
                e.preventDefault();

                // let that = this;
                let provider = this.getAttribute('data-dcp-share');

                //Calculating window position
                let dualScreenLeft = window.screenLeft !== undefined ? window.screenLeft : screen.left;
                let dualScreenTop = window.screenTop !== undefined ? window.screenTop : screen.top;

                let screenWidth = window.innerWidth ? window.innerWidth : document.documentElement.clientWidth ? document.documentElement.clientWidth : screen.width;
                let screenHeight = window.innerHeight ? window.innerHeight : document.documentElement.clientHeight ? document.documentElement.clientHeight : screen.height;

                //Get window width
                let popupWidth = this.getAttribute('data-dcp-width');

                //Get window height
                let popupHeight = this.getAttribute('data-dcp-height');

                //Calculate window left position
                let left = screenWidth / 2 - popupWidth / 2 + dualScreenLeft;

                //Calculate window top position
                let top = screenHeight / 2 - popupHeight / 2 + dualScreenTop;

                console.log(popupWidth, popupHeight);

                // A little piece of magic.
                switch (provider) {
                    case 'facebook':
                        window.open('//www.facebook.com/sharer.php?u=' + SimpleShare.encode(location.href), '_blank', 'width=' + popupWidth + ', height=' + popupHeight + ', top=' + top + ', left=' + left);
                        break;

                    case 'pinterest':
                        window.open('//www.pinterest.com/pin/create/button/?url=' + SimpleShare.encode(location.href) + '&media=' + SimpleShare.encode(thumbnail) + '&description=' + SimpleShare.encode(title), '_blank', 'width=' + popupWidth + ', height=' + popupHeight + ', top=' + top + ', left=' + left);
                        break;

                    case 'twitter':
                        window.open('//twitter.com/intent/tweet?url=' + SimpleShare.encode(location.href) + '&text=' + SimpleShare.encode(title), '_blank', 'width=' + popupWidth + ', height=' + popupHeight + ', top=' + top + ', left=' + left);
                        break;

                    case 'googleplus':
                        window.open('//plus.google.com/share?url=' + SimpleShare.encode(location.href), '_blank', 'width=' + popupWidth + ', height=' + popupHeight + ', top=' + top + ', left=' + left);
                        break;

                    case 'tumblr':
                        window.open('//www.tumblr.com/widgets/share/tool?canonicalUrl=' + SimpleShare.encode(location.href) + '&title=' + SimpleShare.encode(title) + '&caption=' + SimpleShare.encode(description), '_blank', 'width=' + popupWidth + ', height=' + popupHeight + ', top=' + top + ', left=' + left);
                        break;

                    default:
                        console.log('Broken link');
                }
            });
        }
    }
}

Object(__WEBPACK_IMPORTED_MODULE_0_helpers_helpers__["a" /* ready */])(function () {
    new SimpleShare().init();
});

/***/ }),
/* 1 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ready; });


let ready = function (fn) {

    // Sanity check
    if (typeof fn !== 'function') return;

    // If document is already loaded, run method
    if (document.readyState === 'complete') {
        return fn();
    }

    // Otherwise, wait until document is loaded
    document.addEventListener('DOMContentLoaded', fn, false);
};



/***/ })
/******/ ]);
});
//# sourceMappingURL=app.min.js.map